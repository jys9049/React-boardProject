let Koa,Router,bodyParser,mongoose,api,jwtMiddleware;_c77‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_c77‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_c77‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_c77‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_c77‍.w("./api",[["default",["api"],function(v){api=v}]]);_c77‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config();







// import createFakeData from './createFakeData';

const { PORT, MONGO_URI } = process.env;

mongoose
	.connect(MONGO_URI)
	.then(() => {
		console.log('Connect to MongoDB');
		// createFakeData();
	})
	.catch((e) => {
		_c77‍.g.console.error(e);
	});


const app = new Koa();
const router = new Router();

router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);

app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, () => {
	_c77‍.g.console.log('Listening to PORT %d', port);
});
